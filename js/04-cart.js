/*
 * –†–∞–±–æ—Ç–µ–º —Å –∫–æ–ª–ª–µ–∫—Ü–∏–µ–π —Ç–æ–≤–∞—Ä–æ–≤ –≤ –∫–æ—Ä–∑–∏–Ω–µ:
 * - getItems()    //–≤—ã–∑–≤–∞—Ç—å —Ñ—É–Ω–∫—Ü–∏—é
 * - add(product) //–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
 * - remove(productName)
 * - clear()
 * - countTotalPrice()
 * - increaseQuantity(productName)
 * - decreaseQuantity(productName)
 *
 * { name: 'üçé', price: 50 }
 * { name: 'üçá', price: 70 }
 * { name: 'üçã', price: 60 }
 * { name: 'üçì', price: 110 }
 */

const cart = {
  items: [],
  getItems() {
    return this.items;//–∏—Å–ø–æ–ª—å–∑—É–µ–º this —á—Ç–æ–±—ã –≤—ã–∑–≤–∞—Ç—å –º–∞—Å—Å–∏–≤ items
  },
  add(product) {//–¥–æ–±–∞–≤–∏—Ç—å –ø—Ä–æ–¥—É–∫—Ç
    for (const item of this.items) { //–ø–µ—Ä–µ–±–∏—Ä–∞–µ–º –º–∞—Å—Å–∏–≤ –ø–æ—ç–ª–µ–º–µ–Ω—Ç–Ω–æ
      if (item.name === product.name) {
        item.quantity += 1;
        return;
      }
    }

    const newProduct = {
      ...product,
      quantity: 1,
    };

    this.items.push(newProduct);
  },
  remove(productName) {
    const { items } = this;// –¥–µ—Å—Ç—Ä—É–∫—Ä—É—Ä–∏–∑–∞—Ü–∏—è

    for (let i = 0; i < items.length; i += 1) {//–Ω–∞—Ö–æ–¥–∏–º –¥–æ—Å—Ç—É–ø –∫ –∏–Ω–¥–µ–∫—Å—É —ç–ª–µ–º–µ–Ω—Ç–∞
      const item = items[i];//—Å–æ–∑–¥–∞–¥–∏–º –ª–æ–∫–∞–ª—å–Ω—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é

      if (productName === item.name) {
        console.log('–Ω–∞—à–ª–∏ —Ç–∞–∫–æ–π –ø—Ä–æ–¥—É–∫—Ç ', productName);
        console.log('–∏–Ω–¥–µ–∫—Å: ', i);

        items.splice(i, 1);
      }
    }
  },
  clear() {
    this.items = [];
  },
  countTotalPrice() {
    const { items } = this;
    let total = 0;

    for (const { price, quantity } of items) {
      total += price * quantity;
    }

    return total;
  },
  increaseQuantity(productName) {},
  decreaseQuantity(productName) {},
};

console.log(cart.getItems());

cart.add({ name: 'üçé', price: 50 });
cart.add({ name: 'üçá', price: 60 });
cart.add({ name: 'üçã', price: 60 });
cart.add({ name: 'üçã', price: 60 });
cart.add({ name: 'üçì', price: 110 });
cart.add({ name: 'üçì', price: 110 });
cart.add({ name: 'üçì', price: 110 });

console.table(cart.getItems());

console.log('Total: ', cart.countTotalPrice());

cart.remove('üçá');
console.table(cart.getItems());

// cart.clear();
// console.log(cart.getItems());

console.log('Total: ', cart.countTotalPrice());

// cart.increaseQuantity('üçé');
// console.table(cart.getItems());

// cart.decreaseQuantity('üçã');
// cart.decreaseQuantity('üçã');
// console.table(cart.getItems());


//–∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ 34
// const bookShelf = {
//    books: ["The last kingdom", "The guardian of dreams"],
//   // –≠—Ç–æ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞
//   getBooks() {
//     return  "Returning all books";
//     // console.log("Returning all books");
//   },
//   // –≠—Ç–æ –º–µ—Ç–æ–¥ –æ–±—ä–µ–∫—Ç–∞
//   addBook(bookName) {
//     return `Adding book ${bookName}`;
//   },
//  removeBook(bookName) {
//     return `Deleting book ${bookName}`; 
//   },
// updateBook(oldName, newName) {//—ç—Ç–æ—Ç –º–µ—Ç–æ–¥ –æ–±–Ω–æ–≤–ª—è–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–Ω–∏–≥–∏ –Ω–∞ –Ω–æ–≤–æ–µ
// return `Updating book ${oldName} to ${newName}`;//–≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å—Ç—Ä–æ–∫—É
//   }
// };

// bookShelf.getBooks();//–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏–∏
// bookShelf.addBook();


//35 –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞(–∑–∞–º–µ–Ω–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç)

// const bookShelf = {
//   books: ["The last kingdom", "Haze", "The guardian of dreams"],
//   updateBook(oldName, newName) {
//
//    const bookIndex = this.books.indexOf(oldName);//–Ω–∞–π–¥–µ–º –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞(oldName)
//     this.books.splice(bookIndex, 1, newName);//–∑–∞–º–µ–Ω—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–æ–≤—ã–º —ç–ª–µ–º–µ–Ω—Ç–æ–º
//   },
// };


//35 –∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ –æ–±–Ω–æ–≤–∏—Ç—å –Ω–∞–∑–≤–∞–Ω–∏–µ –∑–µ–ª—å—è —Å oldName –Ω–∞ newName, –≤ –º–∞—Å—Å–∏–≤–µ –∑–µ–ª–∏–π –≤ —Å–≤–æ–π—Å—Ç–≤–µ potions.

// const atTheOldToad = {
//   potions: ["Speed potion", "Dragon breath", "Stone skin"],
//   updatePotionName(oldName, newName) {
// const potionIndex = this.potions.indexOf(oldName);//–Ω–∞–π–¥–µ–º –Ω—É–∂–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –º–∞—Å—Å–∏–≤–∞(oldName)
//  if (this.potions.includes(oldName)) {//–µ—Å–ª–∏ –º–∞—Å—Å–∏–≤ —Å–æ–¥–µ—Ä–∂–∏—Ç oldName
// this.potions.splice(potionIndex, 1, newName);//—É–¥–∞–ª—è–µ–º –Ω–∞–π–¥–µ–Ω–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç
//     }
//   },
// };

//–∞–≤—Ç–æ–ø—Ä–æ–≤–µ—Ä–∫–∞ 41
// const atTheOldToad = {
//   potions: [
//     { name: "Speed potion", price: 460 },
//     { name: "Dragon breath", price: 780 },
//     { name: "Stone skin", price: 520 },
//   ],
//   getPotions() { //–º–µ—Ç–æ–¥ –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –∑–µ–ª–∏–π
//     return this.potions;
//   },
//   addPotion(newPotion) {//–¥–æ–±–∞–≤–∏—Ç—å –∑–µ–ª—å–µ
//   for (const potion of this.potions) {
// if (potion.name === newPotion.name) {
//       return `Error! Potion ${newPotion.name} is already in your inventory!`;
//     }
//   }    
//     this.potions.push(newPotion);
//   },

//   removePotion(potionName) {//—É–¥–∞–ª—è–µ—Ç –æ–±—ä–µ–∫—Ç
//   for (let i = 0; i < this.potions.length; i += 1) {
//       const potion = this.potions[i];
//     if (potionName === potion.name) {
//       this.potions.splice(i, 1);
//       return `Potion ${potionName} is not in inventory!`;
//     }
//    }
//   },
//   updatePotionName(oldName, newName) { //–æ–±–Ω–æ–≤–ª—è–µ—Ç —Å–≤–æ–π—Å—Ç–≤–æ name
// for (let i = 0; i < this.potions.length; i += 1) {
//    const potion = this.potions[i];
//    if (oldName === potion.name) {
//      potion.name = newName;
//  return `Potion ${oldName} is not in inventory!`;
//    }
//   }
//     this.potions.splice(potionIndex, 1, newName);
//   },
//  };
