import '../css/common.css';
//–ø–∏—à–µ–º –∏–ø–æ–¥—Ä–æ–º
const horses = [
  'Secretariat',
  'Eclipse',
  'West Australian',
  'Flying Fox',
  'Seabiscuit',
];

let raceCounter = 0; //–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –¥–ª—è –Ω–æ–º–µ—Ä–∞ –∑–∞–µ–∑–¥–∞
const refs = {
  startBtn: document.querySelector('.js-start-race'),
  winnerField: document.querySelector('.js-winner'),
  progressField: document.querySelector('.js-progress'),
  tableBody: document.querySelector('.js-results-table > tbody'),//–ø–æ –∫–ª–∞—Å—É –∏ –≤ –Ω—ë–º –∫ —Ç–µ–≥—É tbody
};

refs.startBtn.addEventListener('click', onStart);//–∑–∞–ø—É—Å–∫–∞–µ–º –ø–æ –∫–ª–∏–∫—É –≤—Å–µ—Ö –ª–æ—à–∞–¥–µ–π
//—Å—Ç–∞—Ä—Ç—É–µ—Ç –≥–æ–Ω–∫–∞
function onStart() {
  raceCounter += 1;//–ø—Ä–∏ –∫–ª–∏–∫–µ —É–≤–µ–ª–∏—á–∏–≤–∞–º –∑–∞–µ–∑–¥ –Ω–∞ 1
  const promises = horses.map(run);//–º–∞—Å—Å–∏–≤ –ø—Ä–æ–º–∏—Å–æ–≤(–ø—Ä–æ—Ö–æ–¥–∏–º—Å—è –ø–æ –º–∞—Å—Å–∏–≤—É —Å –ª–æ—à–∞–¥—è–º–∏ –∏ –¥–ª—è –∫–∞–∂–¥–æ–π –∑–∞–ø—É—Å–∫–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é run)

  updateWinnerField('');//–æ—á–∏—â–∞–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø—Ä–µ–¥—ã–¥—É—â–µ–º –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ
  updateProgressField('ü§ñ –ó–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è, —Å—Ç–∞–≤–∫–∏ –Ω–µ –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è!');//—Å–æ–æ–±—â–µ–Ω–∏–µ –æ –Ω–∞—á–∞–ª–µ –∑–∞–µ–∑–¥–∞
  determineWinner(promises);//–Ω–∞—Ö–æ–¥–∏–º –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
  waitForAll(promises);//–æ–∂–∏–¥–∞–µ–º –ø–æ–∫–∞ –≤—Å–µ –ª–æ—à–∞–¥–∏ –ø—Ä–∏–±–µ–≥—É—Ç(–æ–∫–æ–Ω—á–∞–Ω–∏–µ –∑–∞–µ–∑–¥–∞)
}
//—Ñ—É–Ω–∫—Ü–∏—è –Ω–∞—Ö–æ–¥–∏—Ç –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
function determineWinner(horsesP) {
  Promise.race(horsesP).then(({ horse, time }) => {//–æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –∏–∑ –≤—Å–µ—Ö –ø–µ—Ä–≤–æ–≥–æ –ø—Ä–æ–º–∏—Å–∞ –∏ –æ—Ç–¥–∞—ë—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç
    updateWinnerField(`üéâ –ü–æ–±–µ–¥–∏–ª ${horse}, —Ñ–∏–Ω–∏—à–∏—Ä–æ–≤–∞–≤ –∑–∞ ${time}
    –≤—Ä–µ–º–µ–Ω–∏`);//–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é —Å –æ–±—å—è–≤–ª–µ–Ω–∏–µ–º –ø–æ–∫–∞–∂–∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—è
    updateResultsTable({ horse, time, raceCounter });//–≤—ã–∑—ã–≤–∞–µ–º —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –∑–∞–ø–∏—à–µ—Ç —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ —Ç–∞–±–ª–∏—Ü—É
  });
}
//—Ñ—É–Ω–∫—Ü–∏—è –æ–∂–∏–¥–∞–µ—Ç –ø–æ–∫–∞ –ø—Ä–∏–±–µ–≥—É—Ç –≤—Å–µ –ª–æ—à–∞–¥–∏(–∑–∞–∫–æ–Ω—á–∏—Ç—Å—è –∑–∞–±–µ–≥)
function waitForAll(horsesP) {
  Promise.all(horsesP).then(() => {//–æ–∂–∏–¥–∞–µ—Ç –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤(–≤—Å–µ –ª–æ—à–∞–¥–∏ –ø—Ä–∏–±–µ–∂–∞–ª–∏)
    updateProgressField('üìù –ó–∞–µ–∑–¥ –æ–∫–æ–Ω—á–µ–Ω, –ø—Ä–∏–Ω–∏–º–∞—é—Ç—Å—è —Å—Ç–∞–≤–∫–∏.');//–æ–±—å—è–≤–ª—è–µ–º –Ω–æ–≤—ã–π –∑–∞–µ–∑–¥
  });
}
//–≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –æ –ø–æ–±–µ–¥–∏—Ç–µ–ª–µ
function updateWinnerField(message) {
  refs.winnerField.textContent = message;
}
//–≤—ã–≤–æ–¥–∏—Ç —Å–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞ —ç–∫—Ä–∞–Ω —á—Ç–æ –∑–∞–µ–∑–¥ –Ω–∞—á–∞–ª—Å—è
function updateProgressField(message) {
  refs.progressField.textContent = message;
}
//–≤—ã–≤–æ–¥–∏–º –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–µ–±–µ–¥–∏—Ç–µ–ª–µ –≤ —Ç–∞–±–ª–∏—Ü—É
function updateResultsTable({ horse, time, raceCounter }) {
  const tr = `<tr><td>${raceCounter}</td><td>${horse}</td><td>${time}</td></tr>`;
  refs.tableBody.insertAdjacentHTML('beforeend', tr); //–¥–æ–±–∞–≤–∏—Ç—å –≤ HTML –≤ –∫–æ–Ω–µ—Ü.tableBody
}

//—Ñ—É–Ω–∫—Ü–∏—è –æ–¥–∏–Ω –∫–æ–Ω—å –ø–æ–±–µ–∂–∞–ª
function run(horse) { //–ø–µ—Ä–µ–¥–∞–µ–º –∏–º—è –ª–æ—à–∞–¥–∏
  return new Promise(resolve => { //–≤–µ—Ä–Ω—ë–º –ø—Ä–æ–º–∏—Å
    const time = getRandomTime(2000, 3500);

    setTimeout(() => {
      resolve({ horse, time });//—Ä–µ–∑—É–ª—å—Ç–∞—Ç —Ñ–∏–Ω–∏—à–∞ –±—É–¥–µ—Ç –∏–º—è –ª–æ—à–∞–¥–∏ –∏ –≤—Ä–µ–º—è
    }, time);
  });
}
//—Ñ—É–Ω–∫—Ü–∏—è –ø–æ–ª—É—á–∞–µ—Ç –≤—Ä–µ–º—è –∑–∞ –∫–æ—Ç–æ—Ä–æ–µ –ª–æ—à–∞–¥—å –±—É–¥–µ—Ç –±–µ–≥–∞—Ç—å
function getRandomTime(min, max) {
  return Math.floor(Math.random() * (max - min + 1) + min);
}
/*
 * -—Å—Ç–∞—Ç–∏—á–µ—Å–∫–∏–µ –º–µ—Ç–æ–¥—ã –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–æ—Ä–∞ Promise
 * Promise.race([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –ø–µ—Ä–≤–æ–≥–æ –≤—ã–ø–æ–ª–Ω–∏–≤—à–µ–≥–æ—Å—è –ø—Ä–æ–º–∏—Å–∞

 * Promise.all([]) –¥–ª—è –æ–∂–∏–¥–∞–Ω–∏—è –≤—Å–µ—Ö –ø—Ä–æ–º–∏—Å–æ–≤
 */